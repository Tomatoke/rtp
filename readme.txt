# -------- 概要 --------------------------------
RTP : Random Tag Picker
テキストファイルを読み込み、内容をランダムに出力するツールです。
カスタマイズして、創作のテーマ決めなどに利用できます。

/ ---- ライセンス ----------------
詳細は、同梱の LICENSE を参照のこと。
MIT License
Copyright (c) 2025 Tomatoke

# -------- 使い方 --------------------------------
/ ---- GUI ----------------
+--------------------------------------------------------------+
| Random Tag Picker                                            |
+--------------------------------------------------------------+
| ディレクトリ: [_____________________________________] [参照] |
| テンプレート: [________] レーティング: [__] 出力タグ数: [__] |
+--------------------------------------------------------------+
|                                                              |
|                                                              |
|                                                              |
+--------------------------------------------------------------+
|                            [テンプレート生成] [ランダム生成] |
+--------------------------------------------------------------+
1. rtp-gui.exeをダブルクリックします。

2. ディレクトリを指定します。
例:C:/path/to/rtp/texts/sample

3. テンプレートを指定します。(ランダム生成の場合不要)
例:char

4. 生成ボタンを押します。
テンプレート生成 ... 条件付きでランダムにタグを生成します。
ランダム生成 ... 完全ランダムにタグを生成します。

/ ---- CLI ----------------
rtp [オプション]

オプション：
    -d, --directory  タグディレクトリ（デフォルト：sample）
    -r, --rating     フィルタするレーティング (g(全年齢)/p(12～15禁)/r(18禁))
    -c, --count      抽出するタグ数
    -t, --template   使用するテンプレート名

例：
    rtp # ランダム選択(レーティングは、全年齢)
    rtp -r p # レーティングをPに
    rtp -c 8 # 出力タグ数を8に
    rtp -t char # char テンプレートを利用

# -------- 出力例 --------------------------------
C0001_キャラ:
  ポーズ: 寝そべり
  性別: 女
  衣服(全身): ワンピース
  衣服の色: 青い
  表情: 驚き

# -------- ディレクトリ --------------------------------
デフォルトのお題は、次のような構成になっています。
sample パッケージ以下に、各カテゴリ(キャラなど)があり、
その中に、いくつかのテキストファイルが含まれています。

texts/
  sample/
    C0001_キャラ/
  template.json

# -------- カスタマイズ --------------------------------
1. パッケージフォルダを作成
新しいフォルダを作ります（例：custom/）。

custom/

2. カテゴリフォルダを作成
パッケージフォルダ内にカテゴリフォルダを作ります。
名前や数は自由です（例：C0001_キャラ/）。

custom/
  C0001_キャラ/

3. テキストファイルを作成
各カテゴリフォルダにテキストファイルを置きます。
レーティングを区別したい場合は、以下のようにファイル名を付けます：
*_P.txt → 12～15禁
*_R.txt → 18禁

custom/
  C0001_キャラ/
    表情.txt

実行時に -d C:/path/to/custom のように指定するか、
rtp/texts/custom に置いて -d custom と指定します。

# -------- テキストファイルの基本 --------------------------------
各テキストファイルは、1行につき、1タグを基本とします。

例: 表情.txt
# で始まるコメント行や空行は無視されます。
笑い
泣き
怒り
驚き

# -------- テンプレート --------------------------------
template.jsonを編集することで、ルール付きの選択が可能になります。
テンプレートでは、テキストファイルごとの選択数とレーティングを指定できます。

{
  "char": {
    "rating": "g",
    "values": {
      "ポーズ": 1,
      "性別": 1,
      "衣服": 1,
      "表情": 1
    }
  }
}

また、テンプレートの使用は、実行時に -t char のように指定します。

# -------- テキストファイルの応用 --------------------------------
テンプレート利用時には、テキストファイルの拡張構文を利用できます。

/ ---- 参照(<> 演算子) ----------------
<> ... 別のテキストファイルを参照し、1つのタグに置き換えます。
記述例:<$FILENAME>
出力例: $TAG
※$は変数、実際は任意の値や結果が入る。

/ ---- 連結(. 演算子) ----------------
左右のタグを連結して選択します。
記述例: A . B
出力例: AB

/ ---- 論理積(& 演算子) ----------------
左右の両方のタグを選択します。
記述例: A & B
出力例: A, B

/ ---- 論理和(| 演算子 ) ----------------
左右のどちらかのタグを選択します。
記述例: A | B
出力例1: A
出力例2: B

/ ---- 重み(: 演算子) ----------------
重みを指定し選択率を制御します。
記述例: A:1 | B:2
出力例1(約33%): A
出力例2(約67%): B

/ ---- グループ化({} 演算子) ----------------
演算子の影響範囲や優先順位を制御します。
{ A } | { B . C & D }

出力例1: A
出力例2: BC, D

/ ---- 行継続(\ 指定子) ----------------
長い式や複雑な式を複数行に分割して、記述できます。
{ \
  A \
} | { \
  B . C & D \
}

出力例1: A
出力例2: BC, D
